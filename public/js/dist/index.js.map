{"mappings":"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","sources":["public/js/mapbox.js","public/js/alerts.js","public/js/login.js","public/js/updateSettings.js","public/js/stripe.js","public/js/index.js"],"sourcesContent":["export const displayMap = (locations) => {\r\n  mapboxgl.accessToken =\r\n    'pk.eyJ1IjoicnltZWxhIiwiYSI6ImNsZ2o2Zjd0YjAwZm8zZ3FzNzJ2a3g2MnoifQ.MlfIu_7sSZezmGYUs02ZPQ';\r\n\r\n  // 2) Define new map\r\n  const map = new mapboxgl.Map({\r\n    container: 'map', // container ID\r\n    style: 'mapbox://styles/rymela/clgj89h3z006z01qx9e128675', // style URL\r\n    scrollZoom: false,\r\n    // maxZoom: 10,\r\n    // center: [-122.29286, 38.294065], // starting position [lng, lat]\r\n    // zoom: 5, // starting zoom\r\n    // interactive: false,\r\n  });\r\n\r\n  // 3) Create bounds object\r\n  const bounds = new mapboxgl.LngLatBounds();\r\n\r\n  // 4) Create markers for all locations\r\n  locations.forEach((loc) => {\r\n    // 1) Create marker\r\n    const el = document.createElement('div');\r\n    el.className = 'marker';\r\n\r\n    // 2) Add marker\r\n    new mapboxgl.Marker({\r\n      element: el,\r\n      // bottom of el (pin) will be placed on the location\r\n      anchor: 'bottom',\r\n    })\r\n      .setLngLat(loc.coordinates)\r\n      .addTo(map);\r\n\r\n    // 3) Add label\r\n    new mapboxgl.Popup({\r\n      offset: 30,\r\n    })\r\n      .setLngLat(loc.coordinates)\r\n      .setHTML(`<p>Day ${loc.day}: ${loc.description}</p>`)\r\n      .addTo(map);\r\n\r\n    // 4) extend map bounds to include the current location\r\n    bounds.extend(loc.coordinates);\r\n  });\r\n\r\n  // 5) Fit map to bounds and add padding\r\n  map.fitBounds(bounds, {\r\n    padding: {\r\n      top: 200,\r\n      bottom: 150,\r\n      left: 100,\r\n      right: 100,\r\n    },\r\n  });\r\n\r\n  // 6) Add zoom controls\r\n\r\n  const controls = new mapboxgl.NavigationControl();\r\n  map.addControl(controls, 'bottom-left');\r\n};\r\n","export const hideAlert = () => {\r\n  const el = document.querySelector('.alert');\r\n  if (el) el.parentElement.removeChild(el);\r\n};\r\n\r\n// type is res.ok:  true|false\r\nexport const showAlert = (type, msg) => {\r\n  hideAlert();\r\n  const markup = `\r\n    <div class=\"alert alert--${type}\">${msg}</div>\r\n  `;\r\n  document.querySelector('body').insertAdjacentHTML('afterbegin', markup);\r\n  window.setTimeout(hideAlert, 5000);\r\n};\r\n","import { showAlert } from './alerts';\r\n\r\nexport const login = async (email, password) => {\r\n  try {\r\n    // relative url will work because website and api are hosted on same server\r\n    const res = await fetch('/api/v1/users/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json; charset=UTF-8',\r\n      },\r\n      body: JSON.stringify({\r\n        email,\r\n        password,\r\n      }),\r\n    });\r\n    const data = await res.json();\r\n\r\n    if (res.ok) {\r\n      showAlert('success', 'Logged in successfully!');\r\n      window.setTimeout(() => {\r\n        location.assign('/');\r\n      }, 1500);\r\n    } else throw new Error(data.message);\r\n  } catch (error) {\r\n    showAlert('error', error.message);\r\n  }\r\n};\r\n\r\nexport const logout = async () => {\r\n  try {\r\n    const res = await fetch('/api/v1/users/logout');\r\n    const data = await res.json();\r\n\r\n    if (res.ok) {\r\n      showAlert('success', 'Logged out successfully!');\r\n      // \"true\" forces reload from server and not just from browseer cache!\r\n      window.setTimeout(() => {\r\n        location.assign('/');\r\n      }, 1500);\r\n    } else throw new Error(data.message);\r\n  } catch (error) {\r\n    showAlert('error', error.message ?? 'Error logging out');\r\n  }\r\n};\r\n","import { showAlert } from './alerts';\r\n\r\n// type= 'password' || 'data\r\nexport const updateSettings = async (data, type) => {\r\n  // when sending formData with fetch(), no contenet-type or JSON.stringify\r\n  const url =\r\n    type === 'password'\r\n      ? `/api/v1/users/updateMyPassword`\r\n      : `/api/v1/users/updateMe`;\r\n  const options = {\r\n    method: 'PATCH',\r\n    body: data,\r\n  };\r\n\r\n  try {\r\n    const res = await fetch(url, options);\r\n    // const data = await res.json();\r\n\r\n    if (res.ok) {\r\n      showAlert('success', `${type.toUpperCase()} updated successfully!`);\r\n    }\r\n    if (!res.ok)\r\n      throw new Error(\r\n        'There was a problem updating your information.  Try again later!'\r\n      );\r\n  } catch (error) {\r\n    console.log(error);\r\n    showAlert('error', error.message);\r\n  }\r\n};\r\n","import { showAlert } from './alerts';\r\n\r\nexport const bookTour = async (tourId) => {\r\n  const stripe = Stripe(\r\n    'pk_test_51MxxFoCyE3KlvgqvKGO9m3AGRmxIkBqFh1nLOX9v8ec1KDNNuL1sdkmQPClFUF0HElHky0vaormgDixvP4MCOVyL00gUtsQ6In'\r\n  );\r\n\r\n  try {\r\n    // 1) get session from API\r\n    const res = await fetch(`/api/v1/bookings/checkout-session/${tourId}`);\r\n    const session = await res.json();\r\n    // 2) Create checkout form and charge credit card\r\n    await stripe.redirectToCheckout({\r\n      sessionId: session.session.id,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    showAlert('error', err.message);\r\n  }\r\n};\r\n","import { displayMap } from './mapbox';\r\nimport { login, logout } from './login';\r\nimport { updateSettings } from './updateSettings';\r\nimport { bookTour } from './stripe';\r\n\r\n// DOM ELEMENTS\r\nconst mapBox = document.getElementById('map');\r\nconst loginForm = document.querySelector('.form--login');\r\nconst logOutButton = document.querySelector('.nav__el--logout');\r\nconst userDataForm = document.querySelector('.form-user-data');\r\nconst userPasswordForm = document.querySelector('.form-user-settings');\r\nconst bookBtn = document.getElementById('book-tour');\r\n// VALUES\r\n\r\n//DELEGATION\r\nif (mapBox) {\r\n  const locations = JSON.parse(mapBox.dataset.locations);\r\n  displayMap(locations);\r\n}\r\n\r\nif (loginForm) {\r\n  loginForm.addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n\r\n    const email = document.getElementById('email').value;\r\n    const password = document.getElementById('password').value;\r\n    login(email, password);\r\n  });\r\n}\r\n\r\nif (logOutButton) {\r\n  logOutButton.addEventListener('click', logout);\r\n}\r\n\r\nif (userDataForm) {\r\n  userDataForm.addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n    // to create mulitpart for data\r\n    const form = new FormData();\r\n    form.append('name', document.getElementById('name').value);\r\n    form.append('email', document.getElementById('email').value);\r\n    form.append('photo', document.getElementById('photo').files[0]);\r\n\r\n    // if not using multipart form data, can just pass in object\r\n    // const data = {\r\n    //   name: document.getElementById('name').value,\r\n    //   email: document.getElementById('email').value,\r\n    // };\r\n    updateSettings(form, 'data');\r\n  });\r\n}\r\n\r\nif (userPasswordForm) {\r\n  userPasswordForm.addEventListener('submit', async (e) => {\r\n    e.preventDefault();\r\n    document.querySelector('.btn--save-password').textContent = 'Updating...';\r\n    const passwordCurrent = document.getElementById('password-current');\r\n    const password = document.getElementById('password');\r\n    const passwordConfirm = document.getElementById('password-confirm');\r\n\r\n    const data = {\r\n      passwordCurrent: passwordCurrent.value,\r\n      password: password.value,\r\n      passwordConfirm: passwordConfirm.value,\r\n    };\r\n    await updateSettings(data, 'password');\r\n\r\n    document.querySelector('.btn--save-password').textContent = 'Save password';\r\n\r\n    passwordCurrent.value = '';\r\n    password.value = '';\r\n    passwordConfirm.value = '';\r\n  });\r\n}\r\n\r\nif (bookBtn) {\r\n  bookBtn.addEventListener('click', (e) => {\r\n    e.target.textContent = 'proccessing...';\r\n    const { tourId } = e.target.dataset;\r\n\r\n    bookTour(tourId);\r\n  });\r\n}\r\n"],"names":["$36e678f3ba42579c$export$4c5dd147b21b9176","locations","mapboxgl","accessToken","map","Map","container","style","scrollZoom","bounds","LngLatBounds","forEach","loc","el","document","createElement","className","Marker","element","anchor","setLngLat","coordinates","addTo","Popup","offset","setHTML","day","description","extend","fitBounds","padding","top","bottom","left","right","controls","NavigationControl","addControl","$f3cf2ab2d1aa9d0d$export$516836c6a9dfc573","querySelector","parentElement","removeChild","$f3cf2ab2d1aa9d0d$export$de026b00723010c1","type","msg","markup","insertAdjacentHTML","window","setTimeout","$934f72971f9f0cfb$export$596d806903d1f59e","async","email","password","res","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","location","assign","error","$d5f63981c4d0dfea$export$f558026a994b6051","url","options","toUpperCase","console","log","$a30b15caf8b989cc$export$8d5bdbf26681c0c2","tourId","stripe","Stripe","session","redirectToCheckout","sessionId","id","err","$06aa3c3dc4ea2086$var$mapBox","getElementById","$06aa3c3dc4ea2086$var$loginForm","$06aa3c3dc4ea2086$var$logOutButton","$06aa3c3dc4ea2086$var$userDataForm","$06aa3c3dc4ea2086$var$userPasswordForm","$06aa3c3dc4ea2086$var$bookBtn","parse","dataset","addEventListener","e","preventDefault","value","form","FormData","append","files","textContent","passwordCurrent","passwordConfirm","target"],"version":3,"file":"index.js.map","sourceRoot":"../../../"}